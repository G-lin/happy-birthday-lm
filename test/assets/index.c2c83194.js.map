{"version":3,"file":"index.c2c83194.js","sources":["../../../vite/preload-helper","../../../src/router/index.js","../../../src/main.js"],"sourcesContent":["let scriptRel;const seen = {};export const __vitePreload = function preload(baseModule, deps) {\n    // @ts-ignore\n    if (!__VITE_IS_MODERN__ || !deps) {\n        return baseModule();\n    }\n    // @ts-ignore\n    if (scriptRel === undefined) {\n        // @ts-ignore\n        const relList = document.createElement('link').relList;\n        // @ts-ignore\n        scriptRel =\n            relList && relList.supports && relList.supports('modulepreload')\n                ? 'modulepreload'\n                : 'preload';\n    }\n    return Promise.all(deps.map((dep) => {\n        // @ts-ignore\n        if (dep in seen)\n            return;\n        // @ts-ignore\n        seen[dep] = true;\n        const isCss = dep.endsWith('.css');\n        const cssSelector = isCss ? '[rel=\"stylesheet\"]' : '';\n        // @ts-ignore check if the file is already preloaded by SSR markup\n        if (document.querySelector(`link[href=\"${dep}\"]${cssSelector}`)) {\n            return;\n        }\n        // @ts-ignore\n        const link = document.createElement('link');\n        // @ts-ignore\n        link.rel = isCss ? 'stylesheet' : scriptRel;\n        if (!isCss) {\n            link.as = 'script';\n            link.crossOrigin = '';\n        }\n        link.href = dep;\n        // @ts-ignore\n        document.head.appendChild(link);\n        if (isCss) {\n            return new Promise((res, rej) => {\n                link.addEventListener('load', res);\n                link.addEventListener('error', rej);\n            });\n        }\n    })).then(() => baseModule());\n}","import {createRouter, createWebHashHistory} from 'vue-router';\n/*浏览器上面进度条*/\nimport NProgress from 'nprogress'\nimport 'nprogress/nprogress.css'\n\nNProgress.configure({\n    showSpinner: false, // 是否显示加载ico\n});\n\nconst routes = [\n    {\n        path: '/',\n        name: 'home',\n        component: () => import('@/views/Home.vue')\n    },\n    {\n        path: '/login',\n        name: 'login',\n        component: () => import('@/views/login/Index.vue')\n    },\n    {\n        path: '/wxLogin',\n        name: 'wxLogin',\n        component: () => import('@/views/login/WxLogin.vue')\n    },\n    {\n        path: '/me',\n        name: 'me',\n        meta: {\n            title: '我的'\n        },\n        component: () => import('@/views/me/Index.vue')\n    },\n    {\n        path: '/customize',\n        name: 'customize',\n        component: () => import('@/views/customize/Index.vue')\n    },\n    {\n        path: '/demo',\n        name: 'demo',\n        component: () => import('@/views/demo/Index.vue'),\n        redirect: '/demo/demo',\n        children: [\n            {\n                path: 'demo',\n                name: 'demo',\n                component: () => import('@/views/demo/Demo.vue')\n            },\n            {\n                path: 'list',\n                name: 'list',\n                component: () => import('@/views/demo/List.vue')\n            },\n            {\n                path: 'amap',\n                name: 'amap',\n                component: () => import('@/views/demo/Amap.vue')\n            },\n        ]\n    },\n    {\n        path: '/:pathMatch(.*)*',\n        name: '404',\n        redirect: '/'\n    },\n]\n\nconst router = createRouter({\n    history: createWebHashHistory(),\n    routes\n});\n\nrouter.beforeEach((to, from, next) => {\n    //如果设置标题就显示，没设置使用默认\n    if (null != to.meta && null != to.meta.title && '' !== to.meta.title) {\n        document.title = to.meta.title || import.meta.env.VITE_APP_TITLE;\n    } else {\n        document.title = import.meta.env.VITE_APP_TITLE;\n    }\n    //浏览器上方显示进度条\n    NProgress.start();\n    //正常放行\n    next();\n});\n\nrouter.afterEach(transition => {\n    //关闭浏览器上方的进度条\n    NProgress.done();\n});\n\nexport default router;","import {createApp} from 'vue'\nimport App from './App.vue'\nimport router from './router';\n\n// 这个库会在桌面端自动将mouse事件转换成对应的touch事件，使得组件能够在桌面端使用。\nimport '@vant/touch-emulator';\n\ncreateApp(App)\n    .use(router)\n    .mount('#app');"],"names":["scriptRel","seen","__vitePreload","baseModule","deps","relList","document","createElement","supports","Promise","all","map","dep","isCss","endsWith","cssSelector","querySelector","link","rel","as","crossOrigin","href","head","appendChild","res","rej","addEventListener","then","NProgress","configure","showSpinner","routes","path","name","component","meta","title","redirect","children","router","createRouter","history","createWebHashHistory","beforeEach","to","from","next","start","afterEach","done","createApp","App","use","mount"],"mappings":"8FAAA,IAAIA,mEAAU,MAAMC,EAAO,GAAgBC,EAAgB,SAAiBC,EAAYC,OAExDA,SACjBD,YAGO,IAAdH,EAAyB,OAEnBK,EAAUC,SAASC,cAAc,QAAQF,UAG3CA,GAAWA,EAAQG,UAAYH,EAAQG,SAAS,iBAC1C,gBACA,iBAEPC,QAAQC,IAAIN,EAAKO,KAAKC,OAErBA,KAAOX,WAGNW,IAAO,QACNC,EAAQD,EAAIE,SAAS,QACrBC,EAAcF,EAAQ,qBAAuB,MAE/CP,SAASU,cAAc,cAAcJ,MAAQG,kBAI3CE,EAAOX,SAASC,cAAc,iBAE/BW,IAAML,EAAQ,aAAeb,EAC7Ba,MACIM,GAAK,WACLC,YAAc,MAElBC,KAAOT,WAEHU,KAAKC,YAAYN,GACtBJ,EACO,IAAIJ,SAAQ,CAACe,EAAKC,OAChBC,iBAAiB,OAAQF,KACzBE,iBAAiB,QAASD,iBAGvCE,MAAK,IAAMxB,OCvCnByB,EAAUC,UAAU,CAChBC,aAAa,IAGjB,MAAMC,EAAS,CACX,CACIC,KAAM,IACNC,KAAM,OACNC,UAAW,IAAMhC,0DAErB,CACI8B,KAAM,SACNC,KAAM,QACNC,UAAW,IAAMhC,2DAErB,CACI8B,KAAM,WACNC,KAAM,UACNC,UAAW,IAAMhC,6DAErB,CACI8B,KAAM,MACNC,KAAM,KACNE,KAAM,CACFC,MAAO,MAEXF,UAAW,IAAMhC,2DAErB,CACI8B,KAAM,aACNC,KAAM,YACNC,UAAW,IAAMhC,2DAErB,CACI8B,KAAM,QACNC,KAAM,OACNC,UAAW,IAAMhC,0DACjBmC,SAAU,aACVC,SAAU,CACN,CACIN,KAAM,OACNC,KAAM,OACNC,UAAW,IAAMhC,0DAErB,CACI8B,KAAM,OACNC,KAAM,OACNC,UAAW,IAAMhC,0FAErB,CACI8B,KAAM,OACNC,KAAM,OACNC,UAAW,IAAMhC,4DAI7B,CACI8B,KAAM,mBACNC,KAAM,MACNI,SAAU,MAIZE,EAASC,EAAa,CACxBC,QAASC,IACTX,OAAAA,IAGJQ,EAAOI,YAAW,CAACC,EAAIC,EAAMC,KAErB,MAAAF,EAAWT,MAAQ,MAAAS,EAAWT,KAAKC,OAAS,KAAOQ,EAAGT,KAAKC,eAClDA,MAAQQ,EAAGT,KAAKC,OAAS,qBAEzBA,MAAQ,cAGXW,eAKdR,EAAOS,iBAEOC,UCjFdC,EAAUC,GACLC,IAAIb,GACJc,MAAM"}